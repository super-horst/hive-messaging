message Envelope {

  enum Command {
    UNKNOWN_CMD = 0;
    PUBLISH = 1;
    REQUEST = 2;
    SEND = 3;
  }

  enum Type {
    UNKNOWN_TYPE = 0;
    CIPHERTEXT = 1;
    KEY_EXCHANGE = 2;
    PREKEY_BUNDLE = 3;
    ATTESTATION = 4;
    RECEIPT = 5;
  }

  optional Command cmd = 1;
  optional Type type = 2;
  optional Peer peer = 3;

  // authentication
  optional SenderCertificate client_auth = 5;
  optional ServerCertificate server_auth = 6;

  optional uint64 timestamp = 10;
  optional Payload  content = 11;
}

message ServerCertificate {
  message Certificate {
    optional string uuid = 1;
    optional string namespace = 2;
    optional bytes identity = 3;
  }

  optional bytes certificate = 1;
  optional bytes signature = 2;
}

message SenderCertificate {
  message Certificate {
    optional string uuid = 1;
    optional string namespace = 2;
    optional fixed64 expires = 3;
    optional bytes identity = 4;
    optional ServerCertificate signer = 5;
  }

  optional bytes certificate = 1;
  optional bytes signature = 2;
}

message Peer {
  optional string namespace = 1;
  optional bytes identity = 2;
  optional string name = 3;
}

message Payload {
  optional bytes ciphertext = 1;
  optional KeyExchange key_ex = 2;
  optional PreKeyBundle pre_key = 3;
  optional Receipt receipt = 4;
}

message KeyExchange {

  optional Peer source = 1;
  optional Peer target = 2;

  optional bytes one_time_prekey = 5;
}

message PreKeyBundle {

  optional bytes identity = 1;
  optional bytes prekey = 2;
  optional bytes prekey_signature = 3;

  repeated bytes one_time_prekey = 10;
}

message Receipt {
  optional string uuid = 1;
  optional bytes signature = 2;
}